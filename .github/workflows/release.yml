name: Build RM520 Unix Release

on:
  #push:
  # pull_request:
  #   paths:
  #     - '.github/workflows/*.yml'
  #     - 'tools/**'
  #     - 'py/**'
  #     - 'extmod/**'
  #     - 'shared/**'
  #     - 'lib/**'
  #     - 'examples/**'
  #     - 'mpy-cross/**'
  #     - 'ports/unix/**'
  #     - 'tests/**'
  workflow_dispatch:
  release:
    types:
      - created

permissions: write-all

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

jobs:
  build_qemu_arm:
    runs-on: ubuntu-20.04
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Run the build process with Docker
      uses: docker://ghcr.io/natecarlson/rm520-modem-buildenv:main
    - uses: actions/checkout@v3

    # Build the mpy cross-compiler
    - name: Build compiler
      run: make -C mpy-cross

    # Grab only the submodules needed for unix port.
    - name: Pull in submodules
      run: make -C ports/unix submodules

    # Actually build the unix port.
    - name: Build
      run: make -C ports/unix
    # - name: Copy build-artifacts
    #   uses: skx/github-action-publish-binaries@master
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     args: "ports/unix/build-standard/micropython"

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ports/unix/buld-standard/micropython
        asset_name: micropython.rm520
        tag: ${{ github.ref }}
        overwrite: true
        body: "Micropython binary for Quectel RM520"
